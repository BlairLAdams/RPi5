#!/bin/bash

# ==============================================================================
# SCRIPT: gitRestore
# PURPOSE: Restore Git/SSH config, initialize ~/scr as a Git repo, and pull from origin
#
# USAGE: Run ON YOUR LAPTOP after reimaging the Raspberry Pi.
# ==============================================================================

PI_USER=pi
PI_HOST=raspberrypi.local
GIT_REMOTE_URL=git@github.com:blairladams/scr.git     # <-- Adjust repo name if different
LATEST_BACKUP=$(ls -dt ~/rpi_backup_*/ | head -n 1)
LOCAL_BACKUP_DIR="${LATEST_BACKUP%/}/git_ssh_backup"
REMOTE_BACKUP_DIR=~/git_ssh_backup
REMOTE_SCRIPT_PATH=~/scr/restore_git_ssh.sh

if [ ! -d "$LOCAL_BACKUP_DIR" ]; then
  echo "ERROR: Backup folder not found at $LOCAL_BACKUP_DIR"
  exit 1
fi

echo "Transferring backup to Pi..."
scp -r "$LOCAL_BACKUP_DIR" "$PI_USER@$PI_HOST:$REMOTE_BACKUP_DIR"

echo "Ensuring ~/scr exists on Pi..."
ssh "$PI_USER@$PI_HOST" "mkdir -p ~/scr"

echo "Transferring restore script to Pi..."
scp ~/scr/restore_git_ssh.sh "$PI_USER@$PI_HOST:$REMOTE_SCRIPT_PATH"

echo "Setting up ~/scr Git repo with remote origin and pulling latest code..."
ssh "$PI_USER@$PI_HOST" "
  cd ~/scr
  if [ ! -d .git ]; then
    git init
    git remote add origin $GIT_REMOTE_URL
    git pull origin main || git pull origin master
  else
    echo '~/scr already a Git repo'
  fi
  git add restore_git_ssh.sh
  git commit -m 'Add restore script post-reimage' 2>/dev/null || echo 'Already committed'
"

echo "Running restore script..."
ssh "$PI_USER@$PI_HOST" "bash $REMOTE_SCRIPT_PATH"

echo "Restore, Git setup, and remote pull complete!"
