#!/bin/bash

# ==============================================================================
# SCRIPT: grafanaDemoRestore
# PURPOSE: Restore Grafana config, dashboards, and datasources from latest backup
# USAGE: Run ON THE PI after install and pulling from GitHub
# ==============================================================================

set -e

GRAFANA_URL=http://localhost:3000
AUTH=admin:admin
BACKUP_ROOT=~/scr/backups
LATEST_BACKUP=$(ls -dt "$BACKUP_ROOT"/grafana_backup_* 2>/dev/null | head -n 1)

if [ -z "$LATEST_BACKUP" ]; then
  echo "❌ No Grafana backup found in $BACKUP_ROOT"
  exit 1
fi

echo "🔁 Restoring from: $LATEST_BACKUP"

echo "📂 Restoring provisioning config..."
sudo cp -r "$LATEST_BACKUP/provisioning" /etc/grafana/ 2>/dev/null || echo "⚠️ No provisioning to restore"

echo "📄 Restoring grafana.ini if present..."
if [ -f "$LATEST_BACKUP/grafana.ini" ]; then
  sudo cp "$LATEST_BACKUP/grafana.ini" /etc/grafana/
fi

echo "🔄 Restarting Grafana..."
sudo systemctl restart grafana-server
sleep 10

echo "📡 Restoring datasources..."
curl -s -X POST "$GRAFANA_URL/api/datasources" \
  -H "Content-Type: application/json" \
  -u "$AUTH" \
  -d @"$LATEST_BACKUP/datasources/datasources.json" || echo "⚠️ Datasource restore may have failed"

echo "📊 Restoring dashboards..."
for file in "$LATEST_BACKUP/dashboards/"*.json; do
  curl -s -X POST "$GRAFANA_URL/api/dashboards/db" \
    -H "Content-Type: application/json" \
    -u "$AUTH" \
    -d @- <<EOF
{
  "dashboard": $(jq '.dashboard' "$file"),
  "overwrite": true,
  "folderId": 0
}
EOF
done

echo "✅ Grafana restore complete."
